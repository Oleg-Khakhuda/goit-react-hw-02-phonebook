{"version":3,"sources":["Phonebook/ContactForm.js","Phonebook/ContactsList.js","Phonebook/Filter.js","App.js","index.js"],"names":["ContactForm","inputNameId","uuidv4","inputNumberId","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","addNewContact","resetForm","this","onSubmit","htmlFor","type","id","pattern","title","required","onChange","Component","ContactsList","handleDelete","contacts","map","contact","onClick","Filter","inputFilterId","changeFilter","App","filter","find","alert","prevState","handleFilter","normalizedFilter","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c18061c4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\nexport default class ContactForm extends Component {\r\n    inputNameId = uuidv4();\r\n    inputNumberId = uuidv4();\r\n\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n\r\n    handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.addNewContact(this.state);\r\n        this.resetForm();\r\n    }\r\n\r\n    resetForm = () => {\r\n        this.setState({\r\n            name: '',\r\n            number: ''\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { handleSubmit, inputNameId, handleChange, inputNumberId } = this\r\n        return (\r\n            <form onSubmit={handleSubmit}>  \r\n            <label htmlFor={inputNameId}>Name</label>\r\n            <input\r\n                type=\"text\"\r\n                id={inputNameId}\r\n                name=\"name\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                required\r\n                onChange={handleChange}\r\n                />\r\n            <label htmlFor={inputNumberId}>Number</label>\r\n            <input\r\n                type=\"tel\"\r\n                id={inputNumberId}\r\n                name=\"number\"\r\n                pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n                title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n                required\r\n                onChange={handleChange}\r\n            />\r\n                <button type='submit'>Add contact</button>\r\n            </form>\r\n       ) \r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n// import style from './ContactsList.module.css';\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class ContactsList extends Component{\r\n\r\n    render() {\r\n        const { handleDelete } = this.props\r\n        return (\r\n            <ul>        \r\n                {\r\n                    this.props.contacts.map(contact => (<li\r\n                        key={contact.id} >\r\n                        {contact.name}:  {contact.number}\r\n                        <button\r\n                            type=\"button\"\r\n                            id={contact.id}\r\n                            onClick={handleDelete}\r\n                        >Delete</button>\r\n                      </li>))\r\n                }\r\n        </ul>\r\n    )}\r\n\r\n}\r\n\r\nContactsList.propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    handleDelete: PropTypes.func.isRequired,\r\n}","import  { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default class Filter extends Component {\r\n  inputFilterId = uuidv4()\r\n\r\n    render() {\r\n        const { inputFilterId } = this;\r\n        const { changeFilter } = this.props;\r\n        \r\n    return (\r\n        <form>\r\n            <label htmlFor={inputFilterId}>Find contacts by name</label>\r\n            <input\r\n                type=\"text\"\r\n                id={inputFilterId}\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                onChange={changeFilter}\r\n            />\r\n      </form>    \r\n    );\r\n  }\r\n}\r\n\r\nFilter.propTypes = {\r\n  changeFilter: PropTypes.func.isRequired,\r\n};\r\n","import ContactForm from \"./Phonebook/ContactForm\";\r\nimport ContactsList from \"./Phonebook/ContactsList\";\r\nimport Filter from \"./Phonebook/Filter\";\r\nimport { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [\r\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\r\n    ],\r\n    filter: '',\r\n  }\r\n\r\n  addNewContact = ({ name, number }) => {\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    if (this.state.contacts.find(contact => contact.name === name)) {\r\n      alert(`${name} is already in contacts!`);\r\n    } else {\r\n      this.setState(prevState => ({\r\n        contacts: [...prevState.contacts, contact]\r\n      }));\r\n    };\r\n  }\r\n\r\n  changeFilter  = e => {\r\n    this.setState({ filter: e.target.value });\r\n  };\r\n\r\n  handleFilter = () => {\r\n    const { contacts, filter } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n   handleDelete = e => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== e.target.id)\r\n    }))\r\n   }\r\n  \r\n  render() {\r\n    const { addNewContact, changeFilter, handleFilter, handleDelete } = this\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm\r\n          addNewContact={addNewContact}\r\n        />\r\n        <h1>Contacts</h1>\r\n        <Filter\r\n          changeFilter={changeFilter}\r\n        />\r\n        <ContactsList\r\n          contacts={handleFilter()}\r\n          handleDelete={handleDelete}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}